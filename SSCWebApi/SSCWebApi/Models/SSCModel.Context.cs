//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SSCWebApi.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SSCEntities : DbContext
    {
        public SSCEntities()
            : base("name=SSCEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<CityLows> CityLows { get; set; }
        public virtual DbSet<Citys> Citys { get; set; }
        public virtual DbSet<ComplaintImages> ComplaintImages { get; set; }
        public virtual DbSet<ComplaintsLows> ComplaintsLows { get; set; }
        public virtual DbSet<Lows> Lows { get; set; }
        public virtual DbSet<Species> Species { get; set; }
        public virtual DbSet<Complaints> Complaints { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<ComplaintList> ComplaintList { get; set; }
        public virtual DbSet<UserDetailWithRole> UserDetailWithRole { get; set; }
    
        public virtual int UpdateUserRole(string roleId, string userId)
        {
            var roleIdParameter = roleId != null ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUserRole", roleIdParameter, userIdParameter);
        }
    
        public virtual int DeleteAppUsers(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteAppUsers", userIdParameter);
        }
    
        public virtual int DeleteComplaints(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteComplaints", idParameter);
        }
    
        public virtual ObjectResult<GetUserRole_Result> GetUserRole(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserRole_Result>("GetUserRole", userIdParameter);
        }
    }
}
